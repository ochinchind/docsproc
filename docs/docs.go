// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/tours": {
            "get": {
                "description": "Fetch a list of all available tours.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tours"
                ],
                "summary": "Get all tours",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.TourDocs"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new tour with images and videos.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tours"
                ],
                "summary": "Create a new tour",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tour Description",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tour Route",
                        "name": "route",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Tour Price",
                        "name": "price",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Tour Images (multiple allowed)",
                        "name": "images",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Tour Videos (multiple allowed)",
                        "name": "videos",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/entity.TourDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/tours/{id}": {
            "get": {
                "description": "Fetch details of a specific tour by its UUID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tours"
                ],
                "summary": "Get a tour by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tour ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.TourDocs"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/tours/{id}/": {
            "get": {
                "description": "Fetches images and videos for a specific tour by ID.Example http://localhost:8080/uploads/videos/4f72a1cb-6ed4-4f01-b38b-b605d3062236.mp4.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tours"
                ],
                "summary": "Get static files for a tour",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tour ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns a list of image and video URLs.",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid Tour ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Tour not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.ImageDocs": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                },
                "image_bytes": {
                    "type": "string"
                },
                "tour_id": {
                    "type": "string"
                }
            }
        },
        "entity.TourDocs": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "route": {
                    "type": "string"
                },
                "tour_images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.ImageDocs"
                    }
                },
                "tour_videos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.VideoDocs"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.VideoDocs": {
            "type": "object",
            "properties": {
                "ID": {
                    "type": "string"
                },
                "tour_id": {
                    "type": "string"
                },
                "video_bytes": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "Go Clean Template API",
	Description:      "Using a translation service as an example",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
