// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/google_callback": {
            "get": {
                "description": "Handles Google's OAuth callback, processes authentication, and returns an access token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GoogleOAuth"
                ],
                "summary": "Google OAuth Callback",
                "operationId": "google_callback",
                "responses": {
                    "200": {
                        "description": "Successfully authenticated",
                        "schema": {
                            "$ref": "#/definitions/v1.googleCallbackResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/google_login": {
            "get": {
                "description": "Redirects the user to Google's OAuth authentication page.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GoogleOAuth"
                ],
                "summary": "Google Login",
                "operationId": "google_login",
                "responses": {
                    "303": {
                        "description": "Redirect to Google login"
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Authenticates a user and returns an access token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User Login",
                "operationId": "login",
                "parameters": [
                    {
                        "description": "Login request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully authenticated",
                        "schema": {
                            "$ref": "#/definitions/v1.loginResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "406": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Registers a new user and returns an access token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User Registration",
                "operationId": "register",
                "parameters": [
                    {
                        "description": "Register request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully registered",
                        "schema": {
                            "$ref": "#/definitions/v1.loginResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "406": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/v1/competencies": {
            "get": {
                "description": "Fetch a list of competencies.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Competencies"
                ],
                "summary": "Get Competencies",
                "operationId": "get_competencies",
                "responses": {
                    "200": {
                        "description": "Successful response with competency list",
                        "schema": {
                            "$ref": "#/definitions/v1.getCompetenciesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "post": {
                "description": "Store a new competency.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Competencies"
                ],
                "summary": "Store Competency",
                "operationId": "store_competency",
                "parameters": [
                    {
                        "description": "Competency request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.StoreCompetencyDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully stored",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/v1/competencies/{id}": {
            "get": {
                "description": "Fetch a competency by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Competencies"
                ],
                "summary": "Get Competency",
                "operationId": "get_competency",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Competency ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with competency",
                        "schema": {
                            "$ref": "#/definitions/entity.Competency"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a competency.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Competencies"
                ],
                "summary": "Delete Competency",
                "operationId": "delete_competency",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Competency ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/v1/disciplineModuleChapterTopics": {
            "get": {
                "description": "Fetch a list of disciplineModuleChapterTopics.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DisciplineModuleChapterTopics"
                ],
                "summary": "Get DisciplineModuleChapterTopics",
                "operationId": "get_disciplineModuleChapterTopics",
                "responses": {
                    "200": {
                        "description": "Successful response with disciplineModuleChapterTopic list",
                        "schema": {
                            "$ref": "#/definitions/v1.getDisciplineModuleChapterTopicsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "post": {
                "description": "Store a new disciplineModuleChapterTopic.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DisciplineModuleChapterTopics"
                ],
                "summary": "Store DisciplineModuleChapterTopic",
                "operationId": "store_disciplineModuleChapterTopic",
                "parameters": [
                    {
                        "description": "DisciplineModuleChapterTopic request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.StoreDisciplineModuleChapterTopicDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully stored",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/v1/disciplineModuleChapterTopics/{id}": {
            "get": {
                "description": "Fetch a disciplineModuleChapterTopic by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DisciplineModuleChapterTopics"
                ],
                "summary": "Get DisciplineModuleChapterTopic",
                "operationId": "get_disciplineModuleChapterTopic",
                "parameters": [
                    {
                        "type": "string",
                        "description": "DisciplineModuleChapterTopic ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with disciplineModuleChapterTopic",
                        "schema": {
                            "$ref": "#/definitions/entity.DisciplineModuleChapterTopic"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a disciplineModuleChapterTopic.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DisciplineModuleChapterTopics"
                ],
                "summary": "Delete DisciplineModuleChapterTopic",
                "operationId": "delete_disciplineModuleChapterTopic",
                "parameters": [
                    {
                        "type": "string",
                        "description": "DisciplineModuleChapterTopic ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/v1/disciplineModuleChapters": {
            "get": {
                "description": "Fetch a list of disciplineModuleChapters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DisciplineModuleChapters"
                ],
                "summary": "Get DisciplineModuleChapters",
                "operationId": "get_disciplineModuleChapters",
                "responses": {
                    "200": {
                        "description": "Successful response with disciplineModuleChapter list",
                        "schema": {
                            "$ref": "#/definitions/v1.getDisciplineModuleChaptersResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "post": {
                "description": "Store a new disciplineModuleChapter.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DisciplineModuleChapters"
                ],
                "summary": "Store DisciplineModuleChapter",
                "operationId": "store_disciplineModuleChapter",
                "parameters": [
                    {
                        "description": "DisciplineModuleChapter request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.StoreDisciplineModuleChapterDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully stored",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/v1/disciplineModuleChapters/{id}": {
            "get": {
                "description": "Fetch a disciplineModuleChapter by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DisciplineModuleChapters"
                ],
                "summary": "Get DisciplineModuleChapter",
                "operationId": "get_disciplineModuleChapter",
                "parameters": [
                    {
                        "type": "string",
                        "description": "DisciplineModuleChapter ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with disciplineModuleChapter",
                        "schema": {
                            "$ref": "#/definitions/entity.DisciplineModuleChapter"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a disciplineModuleChapter.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DisciplineModuleChapters"
                ],
                "summary": "Delete DisciplineModuleChapter",
                "operationId": "delete_disciplineModuleChapter",
                "parameters": [
                    {
                        "type": "string",
                        "description": "DisciplineModuleChapter ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/v1/disciplineModules": {
            "get": {
                "description": "Fetch a list of disciplineModules.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DisciplineModules"
                ],
                "summary": "Get DisciplineModules",
                "operationId": "get_disciplineModules",
                "responses": {
                    "200": {
                        "description": "Successful response with disciplineModule list",
                        "schema": {
                            "$ref": "#/definitions/v1.getDisciplineModulesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "post": {
                "description": "Store a new disciplineModule.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DisciplineModules"
                ],
                "summary": "Store DisciplineModule",
                "operationId": "store_disciplineModule",
                "parameters": [
                    {
                        "description": "DisciplineModule request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.StoreDisciplineModuleDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully stored",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/v1/disciplineModules/{id}": {
            "get": {
                "description": "Fetch a disciplineModule by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DisciplineModules"
                ],
                "summary": "Get DisciplineModule",
                "operationId": "get_disciplineModule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "DisciplineModule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with disciplineModule",
                        "schema": {
                            "$ref": "#/definitions/entity.DisciplineModule"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a disciplineModule.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DisciplineModules"
                ],
                "summary": "Delete DisciplineModule",
                "operationId": "delete_disciplineModule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "DisciplineModule ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/v1/disciplineStudyPlans": {
            "get": {
                "description": "Fetch a list of disciplineStudyPlans.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DisciplineStudyPlans"
                ],
                "summary": "Get DisciplineStudyPlans",
                "operationId": "get_disciplineStudyPlans",
                "responses": {
                    "200": {
                        "description": "Successful response with disciplineStudyPlan list",
                        "schema": {
                            "$ref": "#/definitions/v1.getDisciplineStudyPlansResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "post": {
                "description": "Store a new disciplineStudyPlan.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DisciplineStudyPlans"
                ],
                "summary": "Store DisciplineStudyPlan",
                "operationId": "store_disciplineStudyPlan",
                "parameters": [
                    {
                        "description": "DisciplineStudyPlan request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.StoreDisciplineStudyPlanDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully stored",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/v1/disciplineStudyPlans/generateDocx/{id}": {
            "get": {
                "description": "Generate a docx file for a disciplineStudyPlan.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DisciplineStudyPlans"
                ],
                "summary": "Generate Docx",
                "operationId": "generate_docx",
                "parameters": [
                    {
                        "type": "string",
                        "description": "DisciplineStudyPlan ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with disciplineStudyPlan",
                        "schema": {
                            "$ref": "#/definitions/entity.DisciplineStudyPlan"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/v1/disciplineStudyPlans/{id}": {
            "get": {
                "description": "Fetch a disciplineStudyPlan by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DisciplineStudyPlans"
                ],
                "summary": "Get DisciplineStudyPlan",
                "operationId": "get_disciplineStudyPlan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "DisciplineStudyPlan ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with disciplineStudyPlan",
                        "schema": {
                            "$ref": "#/definitions/entity.DisciplineStudyPlan"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a disciplineStudyPlan.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DisciplineStudyPlans"
                ],
                "summary": "Delete DisciplineStudyPlan",
                "operationId": "delete_disciplineStudyPlan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "DisciplineStudyPlan ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/v1/disciplines": {
            "get": {
                "description": "Fetch a list of disciplines.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Disciplines"
                ],
                "summary": "Get Disciplines",
                "operationId": "get_disciplines",
                "responses": {
                    "200": {
                        "description": "Successful response with discipline list",
                        "schema": {
                            "$ref": "#/definitions/v1.getDisciplinesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "post": {
                "description": "Store a new discipline.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Disciplines"
                ],
                "summary": "Store Discipline",
                "operationId": "store_discipline",
                "parameters": [
                    {
                        "description": "Discipline request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.StoreDisciplineDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully stored",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/v1/disciplines/{id}": {
            "get": {
                "description": "Fetch a discipline by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Disciplines"
                ],
                "summary": "Get Discipline",
                "operationId": "get_discipline",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Discipline ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with discipline",
                        "schema": {
                            "$ref": "#/definitions/entity.Discipline"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a discipline.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Disciplines"
                ],
                "summary": "Delete Discipline",
                "operationId": "delete_discipline",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Discipline ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/v1/qualifications": {
            "get": {
                "description": "Fetch a list of qualifications.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Qualifications"
                ],
                "summary": "Get Qualifications",
                "operationId": "get_qualifications",
                "responses": {
                    "200": {
                        "description": "Successful response with qualification list",
                        "schema": {
                            "$ref": "#/definitions/v1.getQualificationsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "post": {
                "description": "Store a new qualification.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Qualifications"
                ],
                "summary": "Store Qualification",
                "operationId": "store_qualification",
                "parameters": [
                    {
                        "description": "Qualification request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.StoreQualificationDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully stored",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/v1/qualifications/{id}": {
            "get": {
                "description": "Fetch a qualification by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Qualifications"
                ],
                "summary": "Get Qualification",
                "operationId": "get_qualification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Qualification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with qualification",
                        "schema": {
                            "$ref": "#/definitions/entity.Qualification"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a qualification.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Qualifications"
                ],
                "summary": "Delete Qualification",
                "operationId": "delete_qualification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Qualification ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/v1/specialties": {
            "get": {
                "description": "Fetch a list of specialties.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Specialties"
                ],
                "summary": "Get Specialties",
                "operationId": "get_specialties",
                "responses": {
                    "200": {
                        "description": "Successful response with specialty list",
                        "schema": {
                            "$ref": "#/definitions/v1.getSpecialtiesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "post": {
                "description": "Store a new specialty.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Specialties"
                ],
                "summary": "Store Specialty",
                "operationId": "store_specialty",
                "parameters": [
                    {
                        "description": "Specialty request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.StoreSpecialtyDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully stored",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "400": {
                        "description": "Invalid request payload",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/v1/specialties/{id}": {
            "get": {
                "description": "Fetch a specialty by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Specialties"
                ],
                "summary": "Get Specialty",
                "operationId": "get_specialty",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Specialty ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with specialty",
                        "schema": {
                            "$ref": "#/definitions/entity.Specialty"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a specialty.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Specialties"
                ],
                "summary": "Delete Specialty",
                "operationId": "delete_specialty",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Specialty ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/v1/users": {
            "get": {
                "description": "Fetch a paginated list of users.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get Users",
                "operationId": "get_users",
                "responses": {
                    "200": {
                        "description": "Successful response with user list",
                        "schema": {
                            "$ref": "#/definitions/v1.getUsersResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/v1/users/myprofile": {
            "patch": {
                "description": "Update profile details of the currently authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update Profile",
                "operationId": "update_profile",
                "parameters": [
                    {
                        "description": "User update data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateProfileDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile successfully updated",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        },
        "/v1/users/{id}": {
            "get": {
                "description": "Fetch details of a user by their ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get User",
                "operationId": "get_user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with user details",
                        "schema": {
                            "$ref": "#/definitions/entity.User"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing user by providing user ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete User",
                "operationId": "delete_user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully deleted",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update details of an existing user by providing user ID and update data.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update User",
                "operationId": "update_user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User update data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateUserDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully updated",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.LoginDTO": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "username": {
                    "type": "string",
                    "example": "john.doe"
                }
            }
        },
        "dto.RegisterDTO": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "abc@example.com"
                },
                "name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "phone": {
                    "type": "string",
                    "example": "+1234567890"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "admin",
                        "user",
                        "methodologist"
                    ],
                    "example": "user"
                },
                "surname": {
                    "type": "string",
                    "example": "Doe"
                },
                "username": {
                    "type": "string",
                    "example": "john.doe"
                }
            }
        },
        "dto.StoreCompetencyDTO": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Competency Name"
                }
            }
        },
        "dto.StoreDisciplineDTO": {
            "type": "object",
            "required": [
                "competency_id",
                "credits_count",
                "education_base",
                "education_form",
                "hours_total",
                "name",
                "qualification_id"
            ],
            "properties": {
                "assessment_type": {
                    "type": "string",
                    "example": "exam"
                },
                "code": {
                    "type": "string",
                    "example": "00342342413"
                },
                "competency_id": {
                    "type": "integer",
                    "example": 1
                },
                "contact_info": {
                    "type": "string",
                    "example": "John Doe"
                },
                "credits_count": {
                    "type": "integer",
                    "example": 100
                },
                "desc": {
                    "type": "string",
                    "example": "John Doe"
                },
                "education_base": {
                    "type": "string",
                    "example": "main"
                },
                "education_form": {
                    "type": "string",
                    "example": "full-time"
                },
                "hours_total": {
                    "type": "integer",
                    "example": 100
                },
                "lang": {
                    "type": "string",
                    "example": "en"
                },
                "name": {
                    "type": "string",
                    "example": "Discipline Name"
                },
                "qualification_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.StoreDisciplineModuleChapterDTO": {
            "type": "object",
            "required": [
                "discipline_module_id",
                "name"
            ],
            "properties": {
                "discipline_module_id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "DisciplineModuleChapter Name"
                }
            }
        },
        "dto.StoreDisciplineModuleChapterTopicDTO": {
            "type": "object",
            "required": [
                "discipline_module_chapter_id",
                "name",
                "type"
            ],
            "properties": {
                "discipline_module_chapter_id": {
                    "type": "integer",
                    "example": 1
                },
                "hours_individual": {
                    "type": "integer",
                    "example": 0
                },
                "hours_internship": {
                    "type": "integer",
                    "example": 0
                },
                "hours_practice": {
                    "type": "integer",
                    "example": 50
                },
                "hours_self_study": {
                    "type": "integer",
                    "example": 0
                },
                "hours_theory": {
                    "type": "integer",
                    "example": 50
                },
                "hours_with_teacher": {
                    "type": "integer",
                    "example": 0
                },
                "name": {
                    "type": "string",
                    "example": "DisciplineModuleChapterTopic Name"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "practice",
                        "theory",
                        "combined"
                    ],
                    "example": "practice"
                }
            }
        },
        "dto.StoreDisciplineModuleDTO": {
            "type": "object",
            "required": [
                "discipline_id",
                "name"
            ],
            "properties": {
                "discipline_id": {
                    "type": "integer",
                    "example": 1
                },
                "eighth_semester": {
                    "type": "integer",
                    "example": 1
                },
                "fifth_semester": {
                    "type": "integer",
                    "example": 1
                },
                "first_semester": {
                    "type": "integer",
                    "example": 73
                },
                "fourth_semester": {
                    "type": "integer",
                    "example": 0
                },
                "name": {
                    "type": "string",
                    "example": "DisciplineModule Name"
                },
                "second_semester": {
                    "type": "integer",
                    "example": 48
                },
                "seventh_semester": {
                    "type": "integer",
                    "example": 1
                },
                "sixth_semester": {
                    "type": "integer",
                    "example": 1
                },
                "third_semester": {
                    "type": "integer",
                    "example": 0
                }
            }
        },
        "dto.StoreDisciplineStudyPlanDTO": {
            "type": "object",
            "properties": {
                "contact_info": {
                    "type": "string",
                    "example": "John Doe"
                },
                "discipline_id": {
                    "type": "integer",
                    "example": 1
                },
                "necessities": {
                    "type": "string",
                    "example": "1,2,3"
                },
                "post_requisites": {
                    "type": "string",
                    "example": "1,2,3"
                },
                "pre_requisites": {
                    "type": "string",
                    "example": "1,2,3"
                }
            }
        },
        "dto.StoreQualificationDTO": {
            "type": "object",
            "required": [
                "code",
                "name",
                "specialty_id"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "00342342413"
                },
                "name": {
                    "type": "string",
                    "example": "Qualification Name"
                },
                "specialty_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.StoreSpecialtyDTO": {
            "type": "object",
            "required": [
                "code",
                "name"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "00342342413"
                },
                "name": {
                    "type": "string",
                    "example": "Specialty Name"
                }
            }
        },
        "dto.UpdateCompetencyDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Competency Name"
                }
            }
        },
        "dto.UpdateDisciplineDTO": {
            "type": "object",
            "properties": {
                "assessment_type": {
                    "type": "string",
                    "example": "exam"
                },
                "code": {
                    "type": "string",
                    "example": "00342342413"
                },
                "competency_id": {
                    "type": "integer",
                    "example": 1
                },
                "contact_info": {
                    "type": "string",
                    "example": "John Doe"
                },
                "credits_count": {
                    "type": "integer",
                    "example": 100
                },
                "desc": {
                    "type": "string",
                    "example": "John Doe"
                },
                "education_base": {
                    "type": "string",
                    "example": "main"
                },
                "education_form": {
                    "type": "string",
                    "example": "full-time"
                },
                "hours_total": {
                    "type": "integer",
                    "example": 100
                },
                "lang": {
                    "type": "string",
                    "example": "en"
                },
                "name": {
                    "type": "string",
                    "example": "Discipline Name"
                },
                "qualification_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.UpdateDisciplineModuleChapterDTO": {
            "type": "object",
            "properties": {
                "discipline_module_id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "DisciplineModuleChapter Name"
                }
            }
        },
        "dto.UpdateDisciplineModuleChapterTopicDTO": {
            "type": "object",
            "properties": {
                "discipline_module_chapter_id": {
                    "type": "integer",
                    "example": 1
                },
                "hours_individual": {
                    "type": "integer",
                    "example": 0
                },
                "hours_internship": {
                    "type": "integer",
                    "example": 0
                },
                "hours_practice": {
                    "type": "integer",
                    "example": 50
                },
                "hours_self_study": {
                    "type": "integer",
                    "example": 0
                },
                "hours_theory": {
                    "type": "integer",
                    "example": 50
                },
                "hours_with_teacher": {
                    "type": "integer",
                    "example": 0
                },
                "name": {
                    "type": "string",
                    "example": "DisciplineModuleChapterTopic Name"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "practice",
                        "theory",
                        "combined"
                    ],
                    "example": "practice"
                }
            }
        },
        "dto.UpdateDisciplineModuleDTO": {
            "type": "object",
            "properties": {
                "discipline_id": {
                    "type": "integer",
                    "example": 1
                },
                "eighth_semester": {
                    "type": "integer",
                    "example": 1
                },
                "fifth_semester": {
                    "type": "integer",
                    "example": 1
                },
                "first_semester": {
                    "type": "integer",
                    "example": 73
                },
                "fourth_semester": {
                    "type": "integer",
                    "example": 0
                },
                "name": {
                    "type": "string",
                    "example": "DisciplineModule Name"
                },
                "second_semester": {
                    "type": "integer",
                    "example": 48
                },
                "seventh_semester": {
                    "type": "integer",
                    "example": 1
                },
                "sixth_semester": {
                    "type": "integer",
                    "example": 1
                },
                "third_semester": {
                    "type": "integer",
                    "example": 0
                }
            }
        },
        "dto.UpdateDisciplineStudyPlanDTO": {
            "type": "object",
            "properties": {
                "contact_info": {
                    "type": "string",
                    "example": "John Doe"
                },
                "discipline_id": {
                    "type": "integer",
                    "example": 1
                },
                "necessities": {
                    "type": "string",
                    "example": "1,2,3"
                },
                "post_requisites": {
                    "type": "string",
                    "example": "1,2,3"
                },
                "pre_requisites": {
                    "type": "string",
                    "example": "1,2,3"
                }
            }
        },
        "dto.UpdateProfileDTO": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "phone": {
                    "type": "string",
                    "example": "+1234567890"
                },
                "surname": {
                    "type": "string",
                    "example": "Doe"
                },
                "username": {
                    "type": "string",
                    "example": "john.doe"
                }
            }
        },
        "dto.UpdateQualificationDTO": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "00342342413"
                },
                "name": {
                    "type": "string",
                    "example": "Qualification Name"
                },
                "specialty_id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dto.UpdateSpecialtyDTO": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "00342342413"
                },
                "name": {
                    "type": "string",
                    "example": "Specialty Name"
                }
            }
        },
        "dto.UpdateUserDTO": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "abc@example.com"
                },
                "name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "phone": {
                    "type": "string",
                    "example": "+1234567890"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "admin",
                        "teacher",
                        "methodologist"
                    ],
                    "example": "user"
                },
                "surname": {
                    "type": "string",
                    "example": "Doe"
                },
                "username": {
                    "type": "string",
                    "example": "john.doe"
                }
            }
        },
        "entity.Competency": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "entity.Discipline": {
            "type": "object",
            "properties": {
                "assessment_type": {
                    "type": "string",
                    "example": "exam"
                },
                "code": {
                    "type": "string",
                    "example": "JHN"
                },
                "competency_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "credits_count": {
                    "type": "integer",
                    "example": 100
                },
                "desc": {
                    "type": "string",
                    "example": "John Doe"
                },
                "discipline_modules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.DisciplineModule"
                    }
                },
                "education_base": {
                    "type": "string",
                    "example": "main"
                },
                "education_form": {
                    "type": "string",
                    "example": "full-time"
                },
                "hours_total": {
                    "type": "integer",
                    "example": 100
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "lang": {
                    "type": "string",
                    "example": "en"
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "qualification_id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "entity.DisciplineModule": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "discipline_id": {
                    "type": "integer",
                    "example": 1
                },
                "discipline_module_chapters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.DisciplineModuleChapter"
                    }
                },
                "eighth_semester": {
                    "type": "integer",
                    "example": 1
                },
                "fifth_semester": {
                    "type": "integer",
                    "example": 1
                },
                "first_semester": {
                    "type": "integer",
                    "example": 73
                },
                "fourth_semester": {
                    "type": "integer",
                    "example": 0
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "second_semester": {
                    "type": "integer",
                    "example": 48
                },
                "seventh_semester": {
                    "type": "integer",
                    "example": 1
                },
                "sixth_semester": {
                    "type": "integer",
                    "example": 1
                },
                "third_semester": {
                    "type": "integer",
                    "example": 0
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "entity.DisciplineModuleChapter": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "JHN"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "discipline_module_chapter_topics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.DisciplineModuleChapterTopic"
                    }
                },
                "discipline_module_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "entity.DisciplineModuleChapterTopic": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "discipline_module_chapter_id": {
                    "type": "integer",
                    "example": 1
                },
                "hours_individual": {
                    "type": "integer",
                    "example": 0
                },
                "hours_internship": {
                    "type": "integer",
                    "example": 0
                },
                "hours_practice": {
                    "type": "integer",
                    "example": 50
                },
                "hours_self_study": {
                    "type": "integer",
                    "example": 0
                },
                "hours_theory": {
                    "type": "integer",
                    "example": 50
                },
                "hours_with_teacher": {
                    "type": "integer",
                    "example": 0
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "type": {
                    "type": "string",
                    "example": "practice"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "entity.DisciplineStudyPlan": {
            "type": "object",
            "properties": {
                "contact_info": {
                    "type": "string",
                    "example": "John Doe"
                },
                "discipline": {
                    "$ref": "#/definitions/entity.Discipline"
                },
                "discipline_id": {
                    "type": "integer",
                    "example": 1
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "necessities": {
                    "type": "string",
                    "example": "1,2,3"
                },
                "post_requisites": {
                    "type": "string",
                    "example": "1,2,3"
                },
                "pre_requisites": {
                    "type": "string",
                    "example": "1,2,3"
                }
            }
        },
        "entity.Qualification": {
            "type": "object",
            "required": [
                "code",
                "name",
                "specialty_id"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "JHN"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "disciplines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Discipline"
                    }
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "specialty_id": {
                    "type": "integer",
                    "example": 1
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "entity.Specialty": {
            "type": "object",
            "required": [
                "code",
                "name"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "example": "JHN"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "qualifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Qualification"
                    }
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "entity.User": {
            "type": "object",
            "properties": {
                "api_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "email": {
                    "type": "string",
                    "example": "abc@example.com"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "phone": {
                    "type": "string",
                    "example": "877755544434"
                },
                "picture": {
                    "type": "string",
                    "example": "https://example.com/picture.jpg"
                },
                "role": {
                    "type": "string",
                    "example": "admin"
                },
                "surname": {
                    "type": "string",
                    "example": "Doe"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "username": {
                    "type": "string",
                    "example": "johndoe"
                }
            }
        },
        "v1.getCompetenciesResponse": {
            "type": "object",
            "properties": {
                "competencies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Competency"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "v1.getDisciplineModuleChapterTopicsResponse": {
            "type": "object",
            "properties": {
                "disciplineModuleChapterTopics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.DisciplineModuleChapterTopic"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "v1.getDisciplineModuleChaptersResponse": {
            "type": "object",
            "properties": {
                "disciplineModuleChapters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.DisciplineModuleChapter"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "v1.getDisciplineModulesResponse": {
            "type": "object",
            "properties": {
                "disciplineModules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.DisciplineModule"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "v1.getDisciplineStudyPlansResponse": {
            "type": "object",
            "properties": {
                "disciplineStudyPlans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.DisciplineStudyPlan"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "v1.getDisciplinesResponse": {
            "type": "object",
            "properties": {
                "disciplines": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Discipline"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "v1.getQualificationsResponse": {
            "type": "object",
            "properties": {
                "qualifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Qualification"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "v1.getSpecialtiesResponse": {
            "type": "object",
            "properties": {
                "specialties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Specialty"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "v1.getUsersResponse": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.User"
                    }
                }
            }
        },
        "v1.googleCallbackResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "v1.loginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "v1.response": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "message"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "Go Clean Template API",
	Description:      "Using a translation service as an example",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
